module Froley

class BranchAnalyzer : InspectionVisitor<<Logical>> [singleton]
  METHODS
    method all_paths_return( cmd:Cmd )->Logical
      return visit( cmd )

    method on_visit( cmd:FroleyRoutine )->Logical
      return visit( cmd.statements )

    method on_visit( cmd:CmdList )->Logical
      forEach (element in cmd)
        if (visit(element)) return true
      endForEach
      return false

    method on_visit( cmd:If )->Logical
      if (not cmd._else) return false

      if (not visit(cmd.statements)) return false

      if (cmd.else_ifs)
        forEach (else_if in cmd.else_ifs)
          if (not visit(else_if)) return false
        endForEach
      endIf

      return visit( cmd._else )

    method on_visit( cmd:Match )->Logical
      if (not cmd._others) return false
      forEach (cmd_case in cmd.cases)
        if (not visit(cmd_case)) return false
      endForEach
      return true

    method on_visit( cmd:On )->Logical
      if (not cmd._else_on_others) return false

      if (not visit(cmd.statements)) return false

      if (cmd.else_ons)
        forEach (else_on in cmd.else_ons)
          if (not visit(else_on)) return false
        endForEach
      endIf

      return visit( cmd._else_on_others )

    method on_visit( cmd:ParserProduce )->Logical
      return true

    method on_visit( cmd:ProduceList )->Logical
      return true

    method on_visit( cmd:ProduceTokenList )->Logical
      return true

    method on_visit( cmd:Restart )->Logical
      return true

    method on_visit( cmd:Return )->Logical
      return true

    method on_visit( cmd:Statements )->Logical
      forEach (element in cmd)
        if (element)
          if (visit(element)) return true
        endIf
      endForEach
      return false

endClass
