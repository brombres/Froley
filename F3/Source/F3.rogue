module F3

# FIXME: rename SyntaxError to CompileError
# FIXME: add base class declaration

$include "Collector.rogue"
$include "FType.rogue"
$include "Scanner.rogue"
$include "Organizer.rogue"
$include "Parser.rogue"
$include "Program.rogue"
$include "Resolver.rogue"
$include "ScanTableBuilder.rogue"
$include "TokenOrganizer.rogue"
$include "Type.rogue"
$include "Var.rogue"
uses F3
uses Utility/CommandLineParser

try
  F3( System.command_line_arguments )
catch (error:SyntaxError)
  Console.error.println error
  System.exit 1
catch (error:Error)
  Console.error.println error
  #Console.error.println error.stack_trace
  System.exit 1
endTry

class F3
  PROPERTIES
    command : Value

  METHODS
    method init( args:String[] )
      command = parse_args( args )

      if (command//options//help or command//args.count != 2)
        print_usage
        System.exit 0
      endIf

      local definition_file = File(command//args.first)
      local output_folder = File(command//args.last)
      if (not definition_file.exists)
        throw Error( ''No such file "$".'' (definition_file) )
      endIf
      if (not output_folder.exists) output_folder.create_folder
      if (not output_folder.is_folder)
        throw Error( ''Unable to create folder "$".'' (output_folder) )
      endIf

      local ast = Parser(definition_file).parse as ProgramDef
      if (not ast)
        throw Error( ''No language definition found in file "$".'' (definition_file) )
      endIf

      Program( command, ast )

    method parse_args( args:String[] )->Value
      # This method is unrelated to the Froley Parser
      local command = CommandLineParser().
      [
        option( "--main",     &alias="-m" )
        option( "--help",     &aliases=["-h","-?"] )
      ].parse( args )
      return command

    method print_usage
      println @|USAGE
               |  f3 [OPTIONS] <language-definition.froley> <output-folder>
               |
               |OPTIONS
               |  --help, -h, -?
               |    Show this help text.
               |
               |  --main, -m
               |    Creates a main application file that demonstrates how to use the scanner and parser.
               |    Does not create or modify a main file if it already exists.
endClass

