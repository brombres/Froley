module F3

$include "Scanner.rogue"
$include "Parser.rogue" [optional]
uses F3
uses Utility/CommandLineParser

try
  F3( System.command_line_arguments )
catch (error:SyntaxError)
  Console.error.println error
  System.exit 1
catch (error:Error)
  Console.error.println error
  Console.error.println error.stack_trace
  System.exit 1
endTry

class F3
  PROPERTIES
    command : Value

  METHODS
    method init( args:String[] )
      command = parse_args( args )

      # trace command
      # has //options and possibly //args

      if (command//options//help or command//args.count == 0)
        print_usage
        System.exit 0
      endIf

      $if (defined(PARSER_EXISTS)) parse_files
      $else                        scan_files

    method scan_files
      forEach (arg in command//args)
        local scanner = Scanner( File(arg) )
        local tokens = scanner.tokenize
        if (scanner.output.count) print scanner.output; flush
        println (forEach in tokens)
      endForEach

    $if (defined(PARSER_EXISTS))
    method parse_files
      forEach (arg in command//args)
        local parser = Parser( File(arg) )
        local ast = parser.parse
        if (parser.output.count) print parser.output; flush
        @trace ast
      endForEach
    $endIf

    method parse_args( args:String[] )->Value
      # This method is unrelated to the Froley Parser
      local command = CommandLineParser().
      [
        option( "--flag",     &alias="-f" )
        option( "--help",     &aliases=["-h","-?"] )
        option( "--setting=", &alias="-s" )
      ].parse( args )
      return command

    method print_usage
      println @|USAGE
               |  f3 [OPTIONS] <filepath>
               |
               |OPTIONS
               |  --help, -h, -?
               |    Show this help text.
endClass
