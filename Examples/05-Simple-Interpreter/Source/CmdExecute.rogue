module Simple

class Runtime [singleton]
  PROPERTIES
    variables = [String:Variant]
endClass

augment
  METHODS
    method Cmd.execute->Variant
      throw t.error( "[INTERNAL] $.execute() is undefined"(type_name) )

    method Statements.execute->Variant
      local result : Variant
      result = (forEach in this).execute
      return result
      throw t.error( "[INTERNAL] $.execute() is undefined"(type_name) )

    method Number.execute->Variant
      return value

    method LiteralString.execute->Variant
      return value

    method Add.execute->Variant
      return left.execute + right.execute

    method Subtract.execute->Variant
      return left.execute - right.execute

    method Multiply.execute->Variant
      return left.execute * right.execute

    method Divide.execute->Variant
      return left.execute / right.execute

    method Power.execute->Variant
      return left.execute ^ right.execute

    method Factorial.execute->Variant
      local result = 1L
      result *= (forEach in 2..(operand.execute->Int))
      return result

    method Negate.execute->Variant
      return -operand.execute

    method ReadVar.execute->Variant
      local entry = Runtime.variables.find( name )
      if (entry) return entry.value
      throw t.error( "'$' is undefined."(name) )

    method WriteVar.execute->Variant
      Runtime.variables[name] = new_value.execute
      return null

    method Println.execute->Variant
      print ((forEach in args).execute)
      println
      return null

endAugment
