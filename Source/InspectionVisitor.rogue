# Generated and updated by Froley. Custom changes will not be overwritten; customize as desired.
module Froley

class InspectionVisitor : InspectionVisitor<<Logical>>
endClass

class InspectionVisitor<<$ReturnType>>
  METHODS
    method on( cmd:Cmd )->$ReturnType
      # Default per-node InspectionVisitor call sequence.
      #
      #   CALL                        OVERLOADABLE METHOD
      #   --------------------        ------------------------
      #   visit(cmd)->$ReturnType  -> on(cmd:CmdType)->$ReturnType
      #     visit_content(cmd)            -> on_visit(cmd:CmdType)
      visit_content( cmd )
      return $ReturnType.meta.default_value

    method on( cmd:CmdList )->Logical
      visit_content( cmd )
      forEach (statement in cmd.list)
        local result = visit(statement)
        if (result?) return result
      endForEach
      return $ReturnType.meta.default_value

    method on_visit( cmd:Cmd )
      # This method is called from the default on(CmdType) before
      # children are visited.

    method visit( cmd:Cmd )->$ReturnType [propagated]
      if (cmd is null) return $ReturnType.meta.default_value
      return cmd.dispatch<<ThisType,$ReturnType>>( this )

    method visit_content( cmd:Cmd ) [propagated]
      cmd.dispatch_on_visit<<ThisType>>( this )

    method on( cmd:Assign )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.target)
      if (result?) return result
      result = visit(cmd.new_value)
      return result

    method on( cmd:Binary )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.left)
      if (result?) return result
      result = visit(cmd.right)
      return result

    method on( cmd:Collect )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.args)
      return result

    method on( cmd:CreateCmd )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.args)
      return result

    method on( cmd:CreateCmdArg )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.arg_value)
      return result

    method on( cmd:Decrement )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.target)
      return result

    method on( cmd:ElseIf )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.condition)
      if (result?) return result
      result = visit(cmd.statements)
      return result

    method on( cmd:ElseOn )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.token_type)
      if (result?) return result
      result = visit(cmd.token_types)
      if (result?) return result
      result = visit(cmd.statements)
      return result

    method on( cmd:If )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.condition)
      if (result?) return result
      result = visit(cmd.statements)
      if (result?) return result
      result = visit(cmd.else_ifs)
      if (result?) return result
      result = visit(cmd._else)
      return result

    method on( cmd:Increment )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.target)
      return result

    method on( cmd:Match )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.expression)
      if (result?) return result
      result = visit(cmd.cases)
      if (result?) return result
      result = visit(cmd._others)
      return result

    method on( cmd:MatchCase )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.expression)
      if (result?) return result
      result = visit(cmd.statements)
      return result

    method on( cmd:On )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.token_type)
      if (result?) return result
      result = visit(cmd.token_types)
      if (result?) return result
      result = visit(cmd.statements)
      if (result?) return result
      result = visit(cmd.else_ons)
      if (result?) return result
      result = visit(cmd._else_on_others)
      return result

    method on( cmd:OneOrMore )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.pattern)
      return result

    method on( cmd:OptionalPattern )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.pattern)
      return result

    method on( cmd:ParserConsume )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.token_type)
      return result

    method on( cmd:ParserCreate )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.arg)
      return result

    method on( cmd:ParserDef )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.routine_defs)
      return result

    method on( cmd:ParserMustConsume )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.token_type)
      return result

    method on( cmd:ParserNextIs )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.token_type)
      return result

    method on( cmd:ParserProduce )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.arg)
      return result

    method on( cmd:Print )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.args)
      return result

    method on( cmd:Println )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.args)
      return result

    method on( cmd:ProgramDef )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.sections)
      return result

    method on( cmd:Return )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.value)
      return result

    method on( cmd:Routine )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.statements)
      return result

    method on( cmd:Scan )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.args)
      return result

    method on( cmd:ScannerConsume )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.args)
      return result

    method on( cmd:ScannerCreate )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.arg)
      return result

    method on( cmd:ScannerDef )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.routine_defs)
      return result

    method on( cmd:ScannerMustConsume )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.args)
      return result

    method on( cmd:ScannerNextIs )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.args)
      return result

    method on( cmd:ScannerPeek )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.lookahead)
      return result

    method on( cmd:ThrowSyntaxError )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.args)
      return result

    #method on( cmd:TokenDef )->$ReturnType

    method on( cmd:TokenGroup )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.definitions)
      return result

    method on( cmd:Unary )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.operand)
      return result

    method on( cmd:While )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.condition)
      if (result?) return result
      result = visit(cmd.statements)
      return result

    method on( cmd:WriteBuffer )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.new_value)
      return result

    method on( cmd:WriteOutput )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.new_value)
      return result

    method on( cmd:ZeroOrMore )->$ReturnType
      visit_content( cmd )
      local result : $ReturnType
      result = visit(cmd.pattern)
      return result

endClass
