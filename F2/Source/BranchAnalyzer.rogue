module F2

class BranchAnalyzer : FroleyVisitor [singleton]
  PROPERTIES
    _all_paths_return = false

  METHODS
    method all_paths_return( cmd:Cmd )->Logical
      _all_paths_return = false
      cmd.dispatch( this )
      return _all_paths_return

    method visit( cmd:If )->Cmd  [override]
      if (not cmd._else) return cmd

      cmd.statements.dispatch( this )
      if (not _all_paths_return) return cmd

      if (cmd.else_ifs)
        forEach (else_if in cmd.else_ifs)
          _all_paths_return = false
          else_if.dispatch( this )
          if (not _all_paths_return) return cmd
        endForEach
      endIf

      _all_paths_return = false
      cmd._else.dispatch( this )

      return cmd

    method visit( cmd:On )->Cmd  [override]
      if (not cmd._else_on_others) return cmd

      cmd.statements.dispatch( this )
      if (not _all_paths_return) return cmd

      if (cmd.else_ons)
        forEach (else_on in cmd.else_ons)
          _all_paths_return = false
            else_on.dispatch( this )
          if (not _all_paths_return) return cmd
        endForEach
      endIf

      _all_paths_return = false
      cmd._else_on_others.dispatch( this )

      return cmd

    method visit( cmd:ParserProduce )->Cmd  [override]
      _all_paths_return = true
      return cmd

    method visit( cmd:Restart )->Cmd  [override]
      _all_paths_return = true
      return cmd

    method visit( cmd:Return )->Cmd  [override]
      _all_paths_return = true
      return cmd

    method visit( cmd:ScannerProduce )->Cmd  [override]
      _all_paths_return = true
      return cmd

    method visit( cmd:Statements )->Cmd  [override]
      forEach (element in cmd)
        if (element)
          element.dispatch( this )
          if (_all_paths_return) return cmd
        endIf
      endForEach
      return cmd

    method visit( cmd:While )->Cmd  [override]
      return cmd

endClass
