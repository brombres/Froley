[tokens]
EOL        eol
IDENTIFIER identifier [content]
INTEGER    integer    [content]

[attributes]
structural

[tokenizer_keywords]
KEYWORD_COLLECT      collect

[common_keywords]
KEYWORD_END_WHICH       endWhich    [structural]
KEYWORD_END_WHILE       endWhile    [structural]
KEYWORD_ESCAPE_WHILE    escapeWhile
KEYWORD_CASE            case
KEYWORD_HALT            halt
KEYWORD_HAS_ANOTHER     hasAnother
KEYWORD_OTHERS          others
KEYWORD_PRODUCE         produce
KEYWORD_WHICH           which
KEYWORD_WHILE           while

[symbols]
SYMBOL_COLON        :
SYMBOL_COMMA        ,
SYMBOL_DOT_DOT      ..
SYMBOL_EQUALS       =
SYMBOL_CLOSE_PAREN  )
SYMBOL_CLOSE_SQUARE ]
SYMBOL_GT           >
SYMBOL_LT           <
SYMBOL_MINUS        -
SYMBOL_OPEN_PAREN   (
SYMBOL_OPEN_SQUARE  [
SYMBOL_SINGLE_QUOTE '\''

[tokenizer]
+ tokenize_froley
  if (not hasAnother) halt

  while (consume(' ') or consume('\t')) noAction
  markSourcePosition

  if (consume('\n')) produce EOL

  scan_identifier

  if (consume('\''))
    scan_single_quoted_string
  endIf

  which (input)
    produceAny [symbols]
    others
      ch = peek
      if (ch is '0'..'9')
        scan_integer
        produce INTEGER
      endIf
  endWhich

  syntaxError

- scan_identifier
  ch = peek
  if (ch is 'a'..'z' or ch is 'A'..'Z' or ch == '_')
    clear buffer
    while (ch is 'a'..'z' or ch is 'A'..'Z' or ch is '0'..'9' or ch == '_')
      ch = read
      collect ch
      ch = peek
      if (ch == '/')
        ch = peek(1)
        if (ch == '/') ch = read; collect ch; ch = read; collect ch
        ch = peek
      endIf
    endWhile

    which (buffer)
      produceAny [tokenizer_keywords]
      produceAny [common_keywords]
      others: produce IDENTIFIER
    endWhich
  endIf
  return

- scan_integer
  while (ch is '0'..'9' or ch == '_')
    ch = read
    if (ch != '_') collect ch
    if (not hasAnother) return
    ch = peek
  endWhile
  return

- scan_single_quoted_string
  while (hasAnother)
    ch = read
    if (ch == '\'') produce STRING
    if (ch == '\n') syntaxError "Unterminated string."
    if (ch == '\\') ch = read
    collect ch
  endWhile
  syntaxError "Unterminated string."

